name: Republish Docker Image from ghcr to ecr

on:
  workflow_call:
    inputs:
      environment:
        description: 'GitHub environment name'
        required: true
        type: string
      gcr_tag:
        description: 'Tag of image saved in GitHub Container Registry (head SHA from PR)'
        required: true
        type: string
      name:
        description: ''
        default: ''
        type: string
        required: true
    secrets:
      AWS_ROLE_TO_ASSUME:
        description: 'IAM role with ecr permissions'
        required: true

env:
  REPO: ${{ github.repository }}

jobs:
  republish:
    if: (github.actor != 'dependabot[bot]')
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write   # This is required for requesting the OIDC JWT
      packages: read   # This is required for ghcr.io pull
    runs-on: ubuntu-latest
    steps:
    - name: downcase REPO
      run: echo "REPO=${GITHUB_REPOSITORY,,}" >> "$GITHUB_ENV"
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Configure AWS Credentials
      id: aws-creds
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        output-credentials: true
    - name: Login to ECR
      uses: docker/login-action@v3
      with:
        registry: ${{ vars.AWS_REGISTRY }}
        username: ${{ steps.aws-creds.outputs.aws-access-key-id }}
        password: ${{ steps.aws-creds.outputs.aws-secret-access-key }}
    - name: Pull prior built named image from GHCR
      run: docker pull ghcr.io/${{ env.REPO }}/${{ inputs.name }}:${{ inputs.gcr_tag }}
    - name: Docker tag named image from GHCR
      run: |
        docker tag ghcr.io/${{ env.REPO }}/${{ inputs.name }}:${{ inputs.gcr_tag }} ${{ vars.AWS_REGISTRY }}/${{ env.REPO }}/${{ inputs.name }}:${{ github.sha }}
        docker tag ghcr.io/${{ env.REPO }}/${{ inputs.name }}:${{ inputs.gcr_tag }} ${{ vars.AWS_REGISTRY }}/${{ env.REPO }}/${{ inputs.name }}:${{ inputs.environment }}
    - name: Docker push named image to ECR
      run: docker push -a ${{ vars.AWS_REGISTRY }}/${{ env.REPO }}/${{ inputs.name }}
   
