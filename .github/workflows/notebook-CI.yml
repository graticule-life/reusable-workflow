name: Generic CI workflow that runs GCD image with an override for the specific notebook to run

on:
  workflow_call:
    inputs:
      notebook:
        description: 'Notebook to run inside GCD image'
        required: true
        type: string
      image-tag:
        description: 'Tag of GCD image to use, defaults to latest'
        type: string
        default: latest
      schema:
        description: 'Snowflake schema param to be passed into notebook, default <repo>_<PR#>'
        type: string
        default: ${{ github.event.repository.name }}_${{ github.event.number }}
    secrets:
      AWS_ROLE_TO_ASSUME:
        description: 'IAM role with ECR permissions'
        required: true

jobs:
  notebook-CI:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
    - name: Login to ECR
      uses: aws-actions/amazon-ecr-login@v2
    - name: Checkout latest (or specified version) of gcd image from ECR    
      env:
        ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ inputs.image-tag }}
      run: |
        docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Set env
      run: echo "PR_DERIVED_SCHEMA_NAME=$(echo ${{ inputs.schema }})" >> $GITHUB_ENV
    # TODO create snowflake schema! Notebook expects it to exist
    - name: Run that above image with the specified notebook as entrypoint override
      uses: addnab/docker-run-action@v3
      # TODO Mount repo into container
      with:
        image: ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:${{ inputs.image-tag }}
        options: -v ${{ github.workspace }}:/home/jovyan
        run: |
          ls -al && 
          jupyter nbconvert --to notebook --execute ${{ inputs.notebook }}
    - name: "Debug"
      run: |
        pwd && ls -al
    # TODO artifact mounted output/** for this PR