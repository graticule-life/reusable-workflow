# build with AWS creds as build-args and push to ghcr.io, scan with trivy
name: Docker Image Build, Push and Scan

on:
  workflow_call:
    inputs:
      environment:
        description: 'GitHub environment name'
        required: true
        type: string
      gcr_tag:
        description: 'Tag of image saved in GitHub Container Registry (head SHA from PR)'
        required: true
        type: string
      context:
        description: 'Docker build context path'
        default: '.'
        type: string
      file:
        description: 'Dockerfile path'
        default: './Dockerfile'
        type: string
      name:
        description: ''
        default: ''
        type: string
        required: true
    secrets:
      AWS_ROLE_TO_ASSUME:
        description: 'IAM role with codeartifact permissions'
        required: true

env:
  REPO: ${{ github.repository }}

jobs:
  build:
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
    - name: downcase REPO
      run: echo "REPO=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
    - name: Docker build
      id:   build
      uses: docker/build-push-action@v5
      with:
        platforms: linux/amd64
        context: "{{ defaultContext }}:${{ inputs.context }}"
        # use original file name when building image
        file: ${{ inputs.file }}
        load: true
        cache-to: type=gha,mode=max
        cache-from: type=gha
        build-args: |
          GIT_COMMIT=${{ inputs.gcr_tag }}
          AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
        # use input name when tagging and pushing for registries
        tags: |
          ghcr.io/${{ env.REPO }}/${{ inputs.name }}:latest
          ghcr.io/${{ env.REPO }}/${{ inputs.name }}:${{ inputs.gcr_tag }}
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        large-packages: false
        docker-images: false
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ghcr.io/${{ env.REPO }}/${{ inputs.name }}:${{ inputs.gcr_tag }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'
    - name: Docker push
      run: |
        docker push --all-tags ghcr.io/${{ env.REPO }}/${{ inputs.name }}
